{"version":3,"file":"router-umd.js","sources":["../lib/utilities.js","../lib/path-to-regexp.js","../lib/route.js","../lib/router.js"],"sourcesContent":["/**\n *\n */\nexport function isDifferentDomain(url, hostName) {\n  if (url.href.indexOf(hostName) === -1) {\n    return true;\n  }\n  return false;\n}\n\n/**\n *\n */\nexport function isMailTo(url) {\n  if (url.origin.indexOf('mailto') > -1) {\n    return true;\n  }\n  return false;\n}\n\n/**\n *\n */\nexport function isModifiedClick(event) {\n  return event.metaKey || event.ctrlKey;\n}\n\n/**\n *\n */\nexport function isNotLeftClick(event) {\n  return event.button !== 0;\n}","/**\n * Expose `pathToRegexp`.\n */\nexport {\n  pathToRegexp,\n  parse,\n  compile,\n  tokensToFunction,\n  tokensToRegExp\n};\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/'\nvar DEFAULT_DELIMITERS = './'\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\"]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER\n  var delimiters = (options && options.delimiters) || DEFAULT_DELIMITERS\n  var pathEscaped = false\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      pathEscaped = true\n      continue\n    }\n\n    var prev = ''\n    var next = str[index]\n    var name = res[2]\n    var capture = res[3]\n    var group = res[4]\n    var modifier = res[5]\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1\n\n      if (delimiters.indexOf(path[k]) > -1) {\n        prev = path[k]\n        path = path.slice(0, k)\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n      pathEscaped = false\n    }\n\n    var partial = prev !== '' && next !== undefined && next !== prev\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = prev || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'\n    })\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index))\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n    }\n  }\n\n  return function (data, options) {\n    var path = ''\n    var encode = (options && options.encode) || encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined\n      var segment\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value))\n\n        if (!matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment\n        continue\n      }\n\n      if (token.optional) {\n        // Prepend partial segment prefixes.\n        if (token.partial) path += token.prefix\n\n        continue\n      }\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        pattern: null\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var delimiter = escapeString(options.delimiter || DEFAULT_DELIMITER)\n  var delimiters = options.delimiters || DEFAULT_DELIMITERS\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|')\n  var route = ''\n  var isEndDelimited = false\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n      isEndDelimited = i === tokens.length - 1 && delimiters.indexOf(token[token.length - 1]) > -1\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + prefix + '(?:' + token.pattern + '))*'\n        : token.pattern\n\n      if (keys) keys.push(token)\n\n      if (token.optional) {\n        if (token.partial) {\n          route += prefix + '(' + capture + ')?'\n        } else {\n          route += '(?:' + prefix + '(' + capture + '))?'\n        }\n      } else {\n        route += prefix + '(' + capture + ')'\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + delimiter + ')?'\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')'\n  } else {\n    if (!strict) route += '(?:' + delimiter + '(?=' + endsWith + '))?'\n    if (!isEndDelimited) route += '(?=' + delimiter + '|' + endsWith + ')'\n  }\n\n  return new RegExp('^' + route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\n","import {pathToRegexp} from './path-to-regexp.js';\n\n\n/**\n *\n */\nexport default class Route {\n  /**\n   *\n   */\n  constructor(pathPattern, callback) {\n    this.path = pathPattern;\n\n    this.callback = callback;\n\n    this._keys = [];\n    this._options = {};\n\n    this.regex = pathToRegexp(\n      this.path,\n      this._keys,\n      this._options\n    );\n  }\n\n  /**\n   * \n   */\n  matches(requestPath) {\n    let match = this.regex.exec(decodeURIComponent(requestPath));\n    if (match) {\n      return true\n    }\n    return false;\n  }\n\n  /**\n   * \n   */\n  parsePath(requestPath) {\n    // In our Router we check if there is a match prior to calling parsePath\n    // However we keep the check in to avoid errors\n    let match = this.regex.exec(decodeURIComponent(requestPath));\n    if (!match) {\n      console.log('[Route] 404 - No route matched path: ', pathname);\n      return false;\n    }\n\n    let parameters = {};\n    for (let i = 0; i < this._keys.length; i++) {\n      let key = this._keys[i];\n      let param = match[i + 1];\n      if (!param) {\n        continue;\n      }\n\n      parameters[key.name] = decodeURIComponent(param);\n      if (key.repeat) {\n        parameters[key.name] = parameters[key.name].split(key.delimiter)\n      }\n    }\n\n    return parameters;\n  }\n}\n","import {\n  isDifferentDomain,\n  isMailTo,\n  isModifiedClick,\n  isNotLeftClick} from './utilities.js';\n\nimport Route from './route.js';\n\n\n/**\n *\n */\nexport default class Router {\n  /**\n   *\n   */\n  constructor() {\n    this._routeMap = new Map();\n\n    // Bind here so that function passed to\n    // add/remove event listener is the same\n    this._onClick = this._onClick.bind(this);\n    this._onPopState = this._onPopState.bind(this);\n  }\n\n  /**\n   *\n   */\n  _addEventListeners() {\n    document.addEventListener('click', this._onClick);\n    window.addEventListener('popstate', this._onPopState);\n  }\n\n  /**\n   *\n   */\n  _removeEventListeners() {\n    document.removeEventListener('click', this._onClick);\n    window.removeEventListener('popstate', this._onPopState);\n  }\n\n  /**\n   *\n   */\n  _onPopState(e) {\n    let url = new URL(location);\n    this._handleRoute(url);\n  }\n\n  /**\n   *\n   */\n  _onClick(e) {\n    // Step 1: Verify click is one we want to potentially intercept\n    if (isNotLeftClick(e)) {\n      return;\n    }\n\n    if(isModifiedClick(e)) {\n      return;\n    }\n\n    // Step 2: Verify click occurred on anchor element or\n    // on element wrapped by anchor element\n    let element = e.target;\n  \n    let anchor;\n    if (e.composedPath) {\n      // If browser supports composedPath use it to crawl\n      // Preferred over parentNode as it works with Shadow DOM\n      // in addition to regular DOM\n      let paths = e.composedPath();\n      for (let i = 0, n = paths.length; i < n; i++) {\n        let item = paths[i];\n        if (item.tagName === 'A') {\n          anchor = item;\n          break;\n        }\n      }\n    } else {\n      // Fallback to legacy parentNode crawl\n      while (element) {\n        if (element.tagName === 'A') {\n          anchor = element;\n          break;\n        }\n        // Update iterator\n        element = element.parentNode;\n      }\n    }\n\n    if (!(anchor)) {\n      // Click did NOT occur on an anchor\n      return;\n    }\n\n    // Step 3: Verify anchor meets criteria\n    if (anchor.hasAttribute('target')) {\n      return;\n    }\n\n    if (anchor.hasAttribute('download')) {\n      return;\n    }\n\n    if (anchor.hasAttribute('data-router-ignore')) {\n      return;\n    }\n\n    if (!(anchor.hasAttribute('href'))) {\n      return;\n    }\n\n    // Step 4: Verify anchor HREF meets criteria\n    let pageOrigin = location.origin;\n    let pageHostname = location.hostname;\n\n    let href= anchor.getAttribute('href');\n    let url = new URL(href, pageOrigin); // Normalize href via URL API\n\n    if (isDifferentDomain(url, pageHostname)) {\n      return;\n    }\n\n    if (isMailTo(url)) {\n      return;\n    }\n\n    // We have verified:\n    // * click type\n    // * anchor tag clicked\n    // * anchor tag criteria\n    // * anchor HREF criteria\n    e.preventDefault();\n\n    this._handleRequest(url);\n  }\n\n  /**\n   *\n   */\n  _handleRequest(url) {\n    this._handleRoute(url);\n    this._setPushState(url);\n  }\n\n  /**\n   *\n   */\n  _handleRoute(url) {\n    let requestPath = url.pathname;\n    let route = this._getRoute(requestPath);\n    if (!route) {\n      console.log('[Router] 404 - No route matched path: ', requestPath);\n      return;\n    }\n\n    let ctx = {};\n    ctx.url = url;\n    ctx.params = route.parsePath(requestPath);\n\n    route.callback.call({}, ctx);\n  }\n\n  /**\n   *\n   */\n  _setPushState(url) {\n    let absoluteUrl = url.href;\n    let stateObject = {};\n    history.pushState(stateObject, '', absoluteUrl);   \n  }\n\n  /**\n   * \n   */\n  _getRoute(requestPath) {\n    let route;\n    for (let [key, value] of this._routeMap) {\n      route = value;\n      if (route.matches(requestPath)) {\n        console.log('[Router] Route matched path: ', requestPath);\n        break;\n      }\n      // Reset route to ensure if for loops never finds\n      // a match route is correctly null\n      route = null;\n    }\n    return route;\n  }\n\n  /* Public API */\n  /**\n   *\n   */\n  enable() {\n    this._addEventListeners();\n\n    // Create a URL instance from location since\n    // we use the URL API internally\n    let url = new URL(location.href);\n    this._handleRoute(url);\n  }\n\n  /**\n   *\n   */\n  disable() {\n    this._removeEventListeners();\n  }\n\n  /**\n   *\n   */\n  route(pathPattern, callback) {\n    let route = new Route(pathPattern, callback);\n\n    this._routeMap.set(route.regex, route);\n  }\n}\n"],"names":[],"mappings":"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"}